#include <gtest/gtest.h>

#include "math/angles.hpp"

using namespace common;
using namespace math;


TEST(Math_Angles, degree_radiant_converter) {
  const float ALLOWED_ERROR = 1e-6;

  // Double 
  EXPECT_NEAR(r2d(0.0), 0.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(2*M_PI), 360.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PI), 180.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PI_2), 90.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PI_4), 45.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PI), -180.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PI_2), -90.0, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PI_4), -45.0, ALLOWED_ERROR);

  // float 
  EXPECT_NEAR(r2d(0.0f), 0.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(2*M_PIf), 360.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PIf), 180.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PI_2f), 90.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(M_PI_4f), 45.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PIf), -180.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PI_2f), -90.0f, ALLOWED_ERROR);
  EXPECT_NEAR(r2d(-M_PI_4f), -45.0f, ALLOWED_ERROR);

  // Double 
  EXPECT_NEAR(d2r(0.0), 0.0, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(360.0), 2*M_PI, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(180.0), M_PI, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(90.0), M_PI_2, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(45.0), M_PI_4, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-180.0), -M_PI, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-90.0), -M_PI_2, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-45.0), -M_PI_4, ALLOWED_ERROR);

  EXPECT_NEAR(d2r(0.0), 0.0, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(360.0f), 2*M_PIf, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(180.0f), M_PIf, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(90.0f), M_PI_2f, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(45.0f), M_PI_4f, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-180.0f), -M_PIf, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-90.0f), -M_PI_2f, ALLOWED_ERROR);
  EXPECT_NEAR(d2r(-45.0f), -M_PI_4f, ALLOWED_ERROR);

}
